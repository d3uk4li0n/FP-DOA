cmake_minimum_required(VERSION 3.16)
project(CMakeSFMLProject LANGUAGES CXX)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
option(BUILD_SHARED_LIBS "Build shared libraries" OFF)

include(FetchContent)
FetchContent_Declare(SFML
    GIT_REPOSITORY https://github.com/SFML/SFML.git
    GIT_TAG 2.6.x)
FetchContent_MakeAvailable(SFML)

# Add ImGui library
file(GLOB IMGUI_SOURCES
    ${CMAKE_SOURCE_DIR}/imgui/*.cpp
)
add_library(ImGui STATIC ${IMGUI_SOURCES})
target_include_directories(ImGui PUBLIC ${CMAKE_SOURCE_DIR}/imgui)
target_link_libraries(ImGui PUBLIC sfml-graphics sfml-window sfml-system)

add_executable(CMakeSFMLProject
    src/main.cpp
    src/helpers/TargetDatabase.cpp
    src/troops/Troop.cpp
    src/ui/GameUI.cpp
    src/logic/GameSession.cpp
    src/logic/EventHandling.cpp
    src/buildings/Building.cpp
    src/buildings/Farmland.cpp
    src/buildings/Mine.cpp
    src/buildings/Quarry.cpp
    src/buildings/LumberMill.cpp
    src/helpers/Rendering.cpp
    src/logic/PlayerResources.cpp)

target_link_libraries(CMakeSFMLProject PRIVATE sfml-graphics sfml-audio sfml-window sfml-system ImGui)
target_compile_features(CMakeSFMLProject PRIVATE cxx_std_17)

if(WIN32)
    add_custom_command(
        TARGET CMakeSFMLProject
        COMMENT "Copy OpenAL DLL"
        PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different
        ${SFML_SOURCE_DIR}/extlibs/bin/$<IF:$<EQUAL:${CMAKE_SIZEOF_VOID_P},8>,x64,x86>/openal32.dll
        $<TARGET_FILE_DIR:CMakeSFMLProject>
        VERBATIM)
endif()

install(TARGETS CMakeSFMLProject DESTINATION bin)
